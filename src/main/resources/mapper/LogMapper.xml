<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fiction.mapper.LogMapper">
  <resultMap id="BaseResultMap" type="com.fiction.entity.Log">
    <id column="log_id" jdbcType="INTEGER" property="logId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="table" jdbcType="VARCHAR" property="table" />
    <result column="parameter" jdbcType="VARCHAR" property="parameter" />
    <result column="startDate" jdbcType="VARCHAR" property="startdate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    log_id, user_id, `type`, `table`, `parameter`, startDate
  </sql>
  <select id="selectByExample" parameterType="com.fiction.example.LogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from log
    where log_id = #{logId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from log
    where log_id = #{logId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.fiction.example.LogExample">
    delete from log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.fiction.entity.Log">
    insert into log (log_id, user_id, `type`, 
      `table`, `parameter`, startDate
      )
    values (#{logId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{type,jdbcType=VARCHAR}, 
      #{table,jdbcType=VARCHAR}, #{parameter,jdbcType=VARCHAR}, #{startdate,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.fiction.entity.Log">
    insert into log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="logId != null">
        log_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="type != null">
        `type`,
      </if>
      <if test="table != null">
        `table`,
      </if>
      <if test="parameter != null">
        `parameter`,
      </if>
      <if test="startdate != null">
        startDate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="logId != null">
        #{logId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="table != null">
        #{table,jdbcType=VARCHAR},
      </if>
      <if test="parameter != null">
        #{parameter,jdbcType=VARCHAR},
      </if>
      <if test="startdate != null">
        #{startdate,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.fiction.example.LogExample" resultType="java.lang.Long">
    select count(*) from log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update log
    <set>
      <if test="record.logId != null">
        log_id = #{record.logId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        `type` = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.table != null">
        `table` = #{record.table,jdbcType=VARCHAR},
      </if>
      <if test="record.parameter != null">
        `parameter` = #{record.parameter,jdbcType=VARCHAR},
      </if>
      <if test="record.startdate != null">
        startDate = #{record.startdate,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update log
    set log_id = #{record.logId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      `type` = #{record.type,jdbcType=VARCHAR},
      `table` = #{record.table,jdbcType=VARCHAR},
      `parameter` = #{record.parameter,jdbcType=VARCHAR},
      startDate = #{record.startdate,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.fiction.entity.Log">
    update log
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        `type` = #{type,jdbcType=VARCHAR},
      </if>
      <if test="table != null">
        `table` = #{table,jdbcType=VARCHAR},
      </if>
      <if test="parameter != null">
        `parameter` = #{parameter,jdbcType=VARCHAR},
      </if>
      <if test="startdate != null">
        startDate = #{startdate,jdbcType=VARCHAR},
      </if>
    </set>
    where log_id = #{logId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fiction.entity.Log">
    update log
    set user_id = #{userId,jdbcType=INTEGER},
      `type` = #{type,jdbcType=VARCHAR},
      `table` = #{table,jdbcType=VARCHAR},
      `parameter` = #{parameter,jdbcType=VARCHAR},
      startDate = #{startdate,jdbcType=VARCHAR}
    where log_id = #{logId,jdbcType=INTEGER}
  </update>
  <select id="selectOneByExample" parameterType="com.fiction.example.LogExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <include refid="Base_Column_List" />
    from log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <select id="selectByExampleWithRowbounds" parameterType="com.fiction.example.LogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>