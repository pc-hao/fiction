<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fiction.mapper.ChapterMapper">
  <resultMap id="BaseResultMap" type="com.fiction.entity.Chapter">
    <id column="book_id" jdbcType="INTEGER" property="bookId" />
    <id column="chapter_id" jdbcType="INTEGER" property="chapterId" />
    <result column="chapter_name" jdbcType="VARCHAR" property="chapterName" />
    <result column="update_time" jdbcType="VARCHAR" property="updateTime" />
    <result column="chapter_txt" jdbcType="VARCHAR" property="chapterTxt" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    book_id, chapter_id, chapter_name, update_time, chapter_txt
  </sql>
  <select id="selectByExample" parameterType="com.fiction.example.ChapterExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from chapter
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="com.fiction.entity.ChapterKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from chapter
    where book_id = #{bookId,jdbcType=INTEGER}
      and chapter_id = #{chapterId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.fiction.entity.ChapterKey">
    delete from chapter
    where book_id = #{bookId,jdbcType=INTEGER}
      and chapter_id = #{chapterId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.fiction.example.ChapterExample">
    delete from chapter
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.fiction.entity.Chapter">
    insert into chapter (book_id, chapter_id, chapter_name, 
      update_time, chapter_txt)
    values (#{bookId,jdbcType=INTEGER}, #{chapterId,jdbcType=INTEGER}, #{chapterName,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=VARCHAR}, #{chapterTxt,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.fiction.entity.Chapter">
    insert into chapter
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="bookId != null">
        book_id,
      </if>
      <if test="chapterId != null">
        chapter_id,
      </if>
      <if test="chapterName != null">
        chapter_name,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="chapterTxt != null">
        chapter_txt,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="bookId != null">
        #{bookId,jdbcType=INTEGER},
      </if>
      <if test="chapterId != null">
        #{chapterId,jdbcType=INTEGER},
      </if>
      <if test="chapterName != null">
        #{chapterName,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=VARCHAR},
      </if>
      <if test="chapterTxt != null">
        #{chapterTxt,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.fiction.example.ChapterExample" resultType="java.lang.Long">
    select count(*) from chapter
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update chapter
    <set>
      <if test="record.bookId != null">
        book_id = #{record.bookId,jdbcType=INTEGER},
      </if>
      <if test="record.chapterId != null">
        chapter_id = #{record.chapterId,jdbcType=INTEGER},
      </if>
      <if test="record.chapterName != null">
        chapter_name = #{record.chapterName,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=VARCHAR},
      </if>
      <if test="record.chapterTxt != null">
        chapter_txt = #{record.chapterTxt,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update chapter
    set book_id = #{record.bookId,jdbcType=INTEGER},
      chapter_id = #{record.chapterId,jdbcType=INTEGER},
      chapter_name = #{record.chapterName,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=VARCHAR},
      chapter_txt = #{record.chapterTxt,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.fiction.entity.Chapter">
    update chapter
    <set>
      <if test="chapterName != null">
        chapter_name = #{chapterName,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=VARCHAR},
      </if>
      <if test="chapterTxt != null">
        chapter_txt = #{chapterTxt,jdbcType=VARCHAR},
      </if>
    </set>
    where book_id = #{bookId,jdbcType=INTEGER}
      and chapter_id = #{chapterId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fiction.entity.Chapter">
    update chapter
    set chapter_name = #{chapterName,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=VARCHAR},
      chapter_txt = #{chapterTxt,jdbcType=VARCHAR}
    where book_id = #{bookId,jdbcType=INTEGER}
      and chapter_id = #{chapterId,jdbcType=INTEGER}
  </update>
  <select id="selectOneByExample" parameterType="com.fiction.example.ChapterExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <include refid="Base_Column_List" />
    from chapter
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <select id="selectByExampleWithRowbounds" parameterType="com.fiction.example.ChapterExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from chapter
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>